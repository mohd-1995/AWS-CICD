name: Static Site + Flask Backend CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  clean-workspace:
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        uses: actions/checkout@v4
        with:
          clean: true

  frontend-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: HTML and CSS Lint (Optional)
        uses: Cyb3r-Jak3/htmlhint-action@v1
        with:
          files: ./frontend

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black bandit pytest

      - name: Code format check (Black)
        run: black . --check

      - name: Linting (flake8)
        run: flake8 .

      - name: Security check (Bandit)
        run: bandit -r .

      - name: Run tests
        run: pytest

  backend-security:
    needs: backend-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Snyk Python Scan
        uses: snyk/actions/python@master
        with:
          args: --file=requirements.txt --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  backend-image:
    needs: backend-security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and push Docker image
        working-directory: ./backend
        run: |
          docker build . -t ${{ secrets.DOCKER_USERNAME }}/flask-backend
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-backend

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{ secrets.DOCKER_USERNAME }}/flask-backend'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Snyk Container Scan
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/flask-backend
          args: --file=backend/Dockerfile --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  k8s-manifest-scan:
    needs: [backend-image]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Scan Kubernetes Manifests
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: kubernetes-manifest/
          args: --severity-threshold=high
